name: CI/CD pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:13-3.1
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install GDAL dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gdal-bin libgdal-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dependencies/requirements.txt
        env:
          CPLUS_INCLUDE_PATH: /usr/include/gdal
          C_INCLUDE_PATH: /usr/include/gdal

      - name: Run Tests
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          GDAL_LIBRARY_PATH: /usr/lib/libgdal.so
          DJANGO_SETTINGS_MODULE: bootcamp_m.settings
          PYTHONPATH: .
          ENVIRONMENT: test
        run: |
          python manage.py migrate
          pytest

  deploy:
    if: github.ref == 'refs/heads/main'
    name: Deploy
    runs-on: ubuntu-latest
    environment: bootcamp
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker images
        run: |
          docker build -t bootcamp_m:latest -f compose/api/Dockerfile . --no-cache
          docker tag bootcamp_m:latest purplerain/bootcamp_m:latest
          docker push purplerain/bootcamp_m:latest

      - name: SSH to EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker-compose -f docker-compose.yml pull
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" > .env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo "DEBUG=${{ secrets.DEBUG }}" >> .env
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
            echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
            docker-compose -f docker-compose.yml down
            docker-compose -f docker-compose.yml up -d
